{
	"name": "TransformMovies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesDb",
						"type": "DatasetReference"
					},
					"name": "MoviesDb"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MovieSink",
						"type": "DatasetReference"
					},
					"name": "Sink"
				}
			],
			"transformations": [
				{
					"name": "FilterYears"
				},
				{
					"name": "DerivedPrimaryGenre"
				},
				{
					"name": "RankMoviesByRating"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesDb",
				"select2 filter(toInteger(year) > 1950) ~> FilterYears",
				"FilterYears derive(PrimaryGenre = iif(locate(\"|\", genres) > 1, left(genres, locate(\"|\", genres)-1), genres)) ~> DerivedPrimaryGenre",
				"DerivedPrimaryGenre window(over(PrimaryGenre,",
				"          year),",
				"     asc({Rotten Tomato}, true)) ~> RankMoviesByRating",
				"MoviesDb select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          {Rotten Tomato} = {Rotton Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"RankMoviesByRating sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Sink"
			]
		}
	}
}